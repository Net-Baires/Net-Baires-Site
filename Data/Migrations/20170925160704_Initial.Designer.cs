// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Models;
using System;

namespace Data.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20170925160704_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EventId");

                    b.Property<string>("Color")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Date");

                    b.Property<long>("DateTicks");

                    b.Property<int?>("DetailId");

                    b.Property<int?>("GroupId");

                    b.Property<string>("Link")
                        .HasMaxLength(255);

                    b.Property<int>("MeetUpEventId");

                    b.Property<string>("Title")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.HasIndex("GroupId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("Models.EventDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EventDetailId");

                    b.Property<string>("Detail")
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.ToTable("EventDetail");
                });

            modelBuilder.Entity("Models.MeetupGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MeetupGroupId");

                    b.Property<string>("Color")
                        .HasMaxLength(50);

                    b.Property<int>("GroupId");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("PhotoURL")
                        .HasMaxLength(255);

                    b.Property<string>("UrlName")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MeetupGroup");
                });

            modelBuilder.Entity("Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MemberId");

                    b.Property<string>("LinkedIn")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("PhotoURL")
                        .HasMaxLength(255);

                    b.Property<string>("Twitter")
                        .HasMaxLength(255);

                    b.Property<int>("Type")
                        .HasColumnName("MemberTypeId");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Models.Sponsor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SponsorId");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("PhotoURL")
                        .HasMaxLength(255);

                    b.Property<string>("URL")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Sponsor");
                });

            modelBuilder.Entity("Models.Event", b =>
                {
                    b.HasOne("Models.EventDetail", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId");

                    b.HasOne("Models.MeetupGroup", "Group")
                        .WithMany("Events")
                        .HasForeignKey("GroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
